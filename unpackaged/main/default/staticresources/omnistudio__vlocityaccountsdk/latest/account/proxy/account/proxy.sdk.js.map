{"version":3,"sources":["webpack://VlocitySDK.[name]/webpack/universalModuleDefinition","webpack://VlocitySDK.[name]/webpack/bootstrap","webpack://VlocitySDK.[name]/./src/sdk/common/index.ts","webpack://VlocitySDK.[name]/./src/sdk/logger/index.ts","webpack://VlocitySDK.[name]/./src/sdk/account/common/AccountInput.ts","webpack://VlocitySDK.[name]/./src/sdk/account/contracts/GetAssetInput.ts","webpack://VlocitySDK.[name]/./src/sdk/account/asset/GetAssetByAccountInput.ts","webpack://VlocitySDK.[name]/./src/sdk/account/contracts/GetContractInput.ts","webpack://VlocitySDK.[name]/./src/sdk/account/offers/GetOfferInput.ts","webpack://VlocitySDK.[name]/./src/sdk/common/cacheType.ts","webpack://VlocitySDK.[name]/./src/sdk/datasource/common/index.ts","webpack://VlocitySDK.[name]/./src/sdk/account/index.sdk.proxy.ts","webpack://VlocitySDK.[name]/./src/sdk/account/account.proxy.sdk.ts","webpack://VlocitySDK.[name]/./node_modules/node-libs-browser/node_modules/util/util.js","webpack://VlocitySDK.[name]/./src/sdk/utils/url.util.ts","webpack://VlocitySDK.[name]/./src/sdk/datasource/utils/delay.ts","webpack://VlocitySDK.[name]/./src/sdk/common/BaseSDK.ts","webpack://VlocitySDK.[name]/./src/sdk/common/HttpMethod.ts","webpack://VlocitySDK.[name]/./src/sdk/datasource/rest/RestInput.ts","webpack://VlocitySDK.[name]/./node_modules/process/browser.js","webpack://VlocitySDK.[name]/./src/sdk/logger/logger.ts","webpack://VlocitySDK.[name]/./src/sdk/common/SDKConfig.ts","webpack://VlocitySDK.[name]/./node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js","webpack://VlocitySDK.[name]/./node_modules/node-libs-browser/node_modules/inherits/inherits_browser.js","webpack://VlocitySDK.[name]/./src/sdk/datasource/common/BaseDataSourceInput.ts","webpack://VlocitySDK.[name]/./src/sdk/utils/index.ts","webpack://VlocitySDK.[name]/./src/sdk/common/SalesForceNamespace.ts","webpack://VlocitySDK.[name]/./src/sdk/utils/objectmap.util.ts","webpack://VlocitySDK.[name]/./src/sdk/utils/common.util.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__export","AccountInput","[object Object]","remoteClass","actionObj","remote","methodName","remoteMethod","common_1","utils_1","AccountInput_1","GetAssetInput","super","pagesize","inputMap","params","fields","join","encodedQueryString","getEncodedQueryString","contractId","Error","SalesForceNamespace","restAPIPrefix","rest","link","queryStringEncode","getInputMap","GetAssetByAccountInput","includes","includeCatalogCodes","priceDetailsFields","accountId","GetContractInput","includeAssets","GetOfferInput","machineResourceName","pageSize","contextId","ContextId","CacheType","account_proxy_sdk_1","default","BaseSDK_1","HttpMethod_1","RestInput_1","GetAssetByAccountInput_1","GetAssetInput_1","GetContractInput_1","GetOfferInput_1","AccountProxy","BaseSDK","config","instance","datasource","secureServerUrl","input","secureServerEndPointUrl","restURL","invokeAPI","HttpMethod","POST","httpMethod","restOptions","RestInput","options","body","JSON","stringify","headers","Content-Type","method","url","secureServerRequestCredentials","credentials","execute","process","getOwnPropertyDescriptors","obj","keys","descriptors","length","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","arguments","push","inspect","args","len","str","String","replace","x","Number","_","isNull","isObject","deprecate","fn","msg","noDeprecation","apply","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","output","base","braces","isArray","toUTCString","formatProperty","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","Array","arg","re","objectToString","e","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","inputObject","withQuestionMarkPrefix","fieldsToInclude","queryString","entries","filter","encodeURIComponent","retryDelay","Delay","retryCount","defaultRetryCount","setTimeout","timeout","defaultTimeout","util_1","logger_1","SalesForceNamespace_1","sdkVersion","extendObj","Logger","overrideObj","assign","namespace","customNamespace","BaseDataSourceInput","restInput","cacheable","cacheExpiration","timeoutInMillis","reload","cacheType","digestData","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","LogLevel","emitLogMessage","debugLevel","type","info","SDKConfig","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","cacheType_1","delay_1","DEFAULT_CACHE_EXPIRATION","INDEXEDDB","data","dataToDigest","TextEncoder","encode","crypto","subtle","digest","digestValue","hexString","buffer","Uint8Array","padStart","getTime","internalNamespace","internalPrefix","internalRestAPIPrefix","prefix","objectMap","mappingObject","keysToInclude","excludeKeysInResponse","result","mappedObj","keyObj","splittedKeys","keyNameObject","customKey","retriveCustomKey","curObj","curKey","values","parse","findProductGroup","hierarchyPath","productGroups","productGroup","Id","childProducts","slice","sortItems","list","sortKey","orderByDesc","sortedList","sort","a","b","localeCompare","reverse"],"mappings":"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","file":"account/proxy/account/proxy.sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"account/proxy\"] = factory();\n\telse\n\t\troot[\"VlocitySDK\"] = root[\"VlocitySDK\"] || {}, root[\"VlocitySDK\"][\"account/proxy\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 230);\n","export * from \"./BaseSDK\";\nexport * from \"./cacheType\";\nexport * from \"./HttpMethod\";\nexport * from \"./SalesForceNamespace\";\nexport * from \"./SDKConfig\";\n","export * from \"./logger\";\n","import { Action } from \"./Action\";\n\n/**\n * Base class that defines an input\n */\nexport abstract class AccountInput {\n  /**\n   * API namespace.\n   */\n  public apiNamespace: string;\n\n  /**\n   * Remote class that handles this request.\n   */\n  public remoteClass: string = \"CpqAppHandler\";\n\n  /**\n   * Remote method that handles this request.\n   */\n  public remoteMethod: string;\n\n  /**\n   * List of fields to be returned.\n   */\n  public fields?: string[];\n\n  /**\n   * Action object json.\n   */\n  public actionObj: Action;\n\n  /**\n   * optional input param used as secure Server rest URL end point when Proxy SDK is used\n   */\n  public secureServerEndPointUrl?: string;\n\n  /**\n   * Function that constructs the input map object containing all query parameters for API\n   * @returns {any}\n   */\n  public abstract getInputMap(): any;\n\n  /**\n   * Function that constructs the API path for ApexRest\n   * Handles scenerio when namespace is null\n   * @returns {string}\n   */\n  public abstract getAPIPath(): string;\n\n  /**\n   * Function to create post body\n   * @returns {any}\n   */\n  public abstract getRequestPayload(): any;\n\n  /**\n   * Function to return VF Remoting method name.\n   * @returns {string}\n   */\n  public getRemoteMethod(): string {\n    if (this.actionObj) {\n      return this.actionObj.remote.methodName;\n    } else {\n      return this.remoteMethod;\n    }\n  }\n\n  /**\n   * Function that constructs the query string for API\n   * @returns {string}\n   */\n  protected abstract getEncodedQueryString(): string;\n}\n","import { SalesForceNamespace } from \"../../common\";\nimport { queryStringEncode } from \"../../utils\";\nimport { AccountInput } from \"../common/AccountInput\";\n\n/**\n * Class that defines input for getting contract details  .\n * @extends AccountInput\n */\nexport class GetAssetInput extends AccountInput {\n  /**\n   * contractId to be used in part of the path of the API to get associated assets.\n   */\n  public contractId?: string;\n\n  /**\n   * pageSize as part of the query string of the API for pagination.\n   */\n  public pagesize?: number;\n\n  /**\n   * List of fields to be returned in the response.\n   */\n  public fields?: string[];\n\n  /**\n   * Constructor function for GetAssetInput class\n   */\n  constructor() {\n    super();\n    this.remoteMethod = \"getAssetsByContract\";\n    this.pagesize = 10;\n  }\n\n  /**\n   * Function that constructs the input map object containing all query parameters for API\n   * @returns {any}\n   */\n  public getInputMap(): any {\n    const inputMap: any = {};\n\n    if (this.actionObj) {\n      return this.actionObj.remote.params || {};\n    }\n\n    if (this.pagesize) {\n      inputMap.pagesize = this.pagesize;\n    }\n\n    if (this.fields) {\n      inputMap.fields = this.fields.join(\",\");\n    }\n\n    return inputMap;\n  }\n\n  /**\n   * Function that constructs the API path for ApexRest\n   * Handles scenerio when namespace is null\n   * @returns {string}\n   */\n  public getAPIPath(): string {\n    const encodedQueryString = this.getEncodedQueryString();\n\n    if (!this.contractId) {\n      throw new Error(\"GetAssetInput::getAPIPath() must have contractId.\");\n    }\n\n    if (this.actionObj) {\n      return (\n        SalesForceNamespace.restAPIPrefix +\n        this.actionObj.rest.link +\n        encodedQueryString\n      );\n    } else {\n      return `${SalesForceNamespace.restAPIPrefix}/v2/contracts/${\n        this.contractId\n      }/assets${encodedQueryString}`;\n    }\n  }\n\n  /**\n   * Function that constructs the Request body json for ApexRest and Rest when we are using HTTP methods of POST or PUT.\n   * @returns {any}\n   */\n  public getRequestPayload(): any {\n    return null;\n  }\n\n  /**\n   * Function that constructs the query string for API\n   * @returns {string}\n   */\n  protected getEncodedQueryString(): string {\n    const fieldsToInclude = [\"pagesize\", \"fields\"];\n\n    const encodedQueryString = queryStringEncode(\n      this.getInputMap(),\n      true,\n      fieldsToInclude\n    );\n\n    return encodedQueryString;\n  }\n}\n","import { SalesForceNamespace } from \"../../common\";\nimport { queryStringEncode } from \"../../utils\";\nimport { AccountInput } from \"../common/AccountInput\";\n\n/**\n * Class that defines input for getting assets by account details  .\n * @extends AccountInput\n */\nexport class GetAssetByAccountInput extends AccountInput {\n  /**\n   * accountId to be used in part of the path of the API to get associated assets.\n   */\n  public accountId?: string;\n\n  /**\n   * pageSize as part of the query string of the API for pagination.\n   */\n  public pagesize?: number;\n\n  /**\n   * includes as part of the query string of the API for noContractAssets.\n   */\n  public includes?: string;\n\n  /**\n   * includeCatalogCodes as part of the query string of the API to fetch catalog codes.\n   */\n  public includeCatalogCodes?: boolean;\n\n  /**\n   * List of fields to be returned in the response.\n   */\n  public fields?: string[];\n\n  /**\n   * List of price fields for pricing calculation.\n   */\n  public priceDetailsFields?: string[];\n\n  /**\n   * Constructor function for GetAssetByAccountInput class\n   */\n  constructor() {\n    super();\n    this.remoteMethod = \"getAssetsByAccount\";\n    this.pagesize = 10;\n  }\n\n  /**\n   * Function that constructs the input map object containing all query parameters for API\n   * @returns {any}\n   */\n  public getInputMap(): any {\n    const inputMap: any = {};\n\n    if (this.actionObj) {\n      return this.actionObj.remote.params || {};\n    }\n\n    if (this.pagesize) {\n      inputMap.pagesize = this.pagesize;\n    }\n\n    if (this.includes) {\n      inputMap.includes = this.includes;\n    }\n\n    if (this.includeCatalogCodes) {\n      inputMap.includeCatalogCodes = this.includeCatalogCodes;\n    }\n\n    if (this.priceDetailsFields) {\n      inputMap.priceDetailsFields = this.priceDetailsFields;\n    }\n\n    if (this.fields) {\n      inputMap.fields = this.fields.join(\",\");\n    }\n\n    return inputMap;\n  }\n\n  /**\n   * Function that constructs the API path for ApexRest\n   * Handles scenerio when namespace is null\n   * @returns {string}\n   */\n  public getAPIPath(): string {\n    const encodedQueryString = this.getEncodedQueryString();\n\n    if (!this.accountId) {\n      throw new Error(\n        \"GetAssetByAccountInput::getAPIPath() must have accountId.\"\n      );\n    }\n\n    if (this.actionObj) {\n      return (\n        SalesForceNamespace.restAPIPrefix +\n        this.actionObj.rest.link +\n        encodedQueryString\n      );\n    } else {\n      return `${SalesForceNamespace.restAPIPrefix}/v2/accounts/${\n        this.accountId\n      }/assets${encodedQueryString}`;\n    }\n  }\n\n  /**\n   * Function that constructs the Request body json for ApexRest and Rest when we are using HTTP methods of POST or PUT.\n   * @returns {any}\n   */\n  public getRequestPayload(): any {\n    return null;\n  }\n\n  /**\n   * Function that constructs the query string for API\n   * @returns {string}\n   */\n  protected getEncodedQueryString(): string {\n    const fieldsToInclude = [\n      \"pagesize\",\n      \"include\",\n      \"priceDetailsFields\",\n      \"fields\",\n      \"includeCatalogCodes\"\n    ];\n\n    const encodedQueryString = queryStringEncode(\n      this.getInputMap(),\n      true,\n      fieldsToInclude\n    );\n\n    return encodedQueryString;\n  }\n}\n","import { SalesForceNamespace } from \"../../common\";\nimport { queryStringEncode } from \"../../utils\";\nimport { AccountInput } from \"../common/AccountInput\";\n\n/**\n * Class that defines input for getting contract details  .\n * @extends AccountInput\n */\nexport class GetContractInput extends AccountInput {\n  /**\n   * accountId to be used in part of the path of the API to get associated contracts.\n   */\n  public accountId?: string;\n\n  /**\n   * includeAssets boolean flag is used to decide whether to fetch Assets along with contracts or not.\n   */\n  public includeAssets?: boolean;\n\n  /**\n   * List of fields to be returned in the response.\n   */\n  public fields?: string[];\n\n  /**\n   * Constructor function for GetContractInput class\n   */\n  constructor() {\n    super();\n    this.remoteMethod = \"getContracts\";\n    this.includeAssets = false;\n  }\n\n  /**\n   * Function that constructs the input map object containing all query parameters for API\n   * @returns {any}\n   */\n  public getInputMap(): any {\n    const inputMap: any = {};\n\n    if (this.actionObj) {\n      return this.actionObj.remote.params || {};\n    }\n\n    if (this.fields) {\n      inputMap.fields = this.fields.join(\",\");\n    }\n\n    return inputMap;\n  }\n\n  /**\n   * Function that constructs the API path for ApexRest\n   * Handles scenerio when namespace is null\n   * @returns {string}\n   */\n  public getAPIPath(): string {\n    const encodedQueryString = this.getEncodedQueryString();\n\n    if (!this.accountId) {\n      throw new Error(\"GetContractInput::getAPIPath() must have accountId.\");\n    }\n\n    if (this.actionObj) {\n      return (\n        SalesForceNamespace.restAPIPrefix +\n        this.actionObj.rest.link +\n        encodedQueryString\n      );\n    } else {\n      return `${SalesForceNamespace.restAPIPrefix}/v2/accounts/${\n        this.accountId\n      }/contracts${encodedQueryString}`;\n    }\n  }\n\n  /**\n   * Function that constructs the Request body json for ApexRest and Rest when we are using HTTP methods of POST or PUT.\n   * @returns {any}\n   */\n  public getRequestPayload(): any {\n    return null;\n  }\n\n  /**\n   * Function that constructs the query string for API\n   * @returns {string}\n   */\n  protected getEncodedQueryString(): string {\n    const fieldsToInclude = [\"fields\"];\n\n    const encodedQueryString = queryStringEncode(\n      this.getInputMap(),\n      true,\n      fieldsToInclude\n    );\n\n    return encodedQueryString;\n  }\n}\n","import { SalesForceNamespace } from \"../../common\";\nimport { queryStringEncode } from \"../../utils\";\nimport { AccountInput } from \"../common/AccountInput\";\n/**\n * Class that defines input for getting offers.\n * @extends AccountInput\n */\nexport class GetOfferInput extends AccountInput {\n  /**\n   * contextId to be used in part of the path of the API to get offers.\n   */\n  public contextId?: string;\n\n  /**\n   * pageSize as part of the query string of the API for pagination.\n   */\n  public pageSize?: number;\n\n  /**\n   * List of fields to be returned in the response.\n   */\n  public fields?: string[];\n\n  /**\n   * machineResourceName to be used in part of the path of the API to get offers.\n   */\n  public machineResourceName?: string;\n\n  /**\n   * Constructor function for GetOfferInput class\n   */\n  constructor() {\n    super();\n    this.remoteMethod = \"\";\n    this.machineResourceName = \"\";\n    this.pageSize = 5; // default set to 5\n  }\n\n  /**\n   * Function that constructs the input map object containing all query parameters for API\n   * @returns {any}\n   */\n  public getInputMap(): any {\n    const inputMap: any = {};\n\n    if (this.actionObj) {\n      return this.actionObj.remote.params || {};\n    }\n\n    if (this.contextId) {\n      inputMap.ContextId = this.contextId;\n    }\n\n    if (this.pageSize) {\n      inputMap.pageSize = this.pageSize;\n    }\n\n    if (this.fields) {\n      inputMap.fields = this.fields.join(\",\");\n    }\n\n    return inputMap;\n  }\n\n  /**\n   * Function that constructs the API path for ApexRest\n   * Handles scenerio when namespace is null\n   * @returns {string}\n   */\n  public getAPIPath(): string {\n    const encodedQueryString = this.getEncodedQueryString();\n\n    if (!this.contextId) {\n      throw new Error(\"GetOfferInput::getAPIPath() must have contextId.\");\n    }\n\n    if (this.actionObj) {\n      return (\n        SalesForceNamespace.restAPIPrefix +\n        this.actionObj.rest.link +\n        encodedQueryString\n      );\n    } else {\n      return `${SalesForceNamespace.restAPIPrefix}/v1/intelligence/${\n        this.machineResourceName\n      }${encodedQueryString}`;\n    }\n  }\n\n  /**\n   * Function that constructs the Request body json for ApexRest and Rest when we are using HTTP methods of POST or PUT.\n   * @returns {any}\n   */\n  public getRequestPayload(): any {\n    return null;\n  }\n\n  /**\n   * Function that constructs the query string for API\n   * @returns {string}\n   */\n  protected getEncodedQueryString(): string {\n    const fieldsToInclude = [\"pageSize\", \"ContextId\", \"fields\"];\n\n    const encodedQueryString = queryStringEncode(\n      this.getInputMap(),\n      true,\n      fieldsToInclude\n    );\n\n    return encodedQueryString;\n  }\n}\n","export enum CacheType {\n  INDEXEDDB = \"INDEXEDDB\",\n  LOCALSTORAGE = \"LOCALSTORAGE\",\n  SESSIONSTORAGE = \"SESSIONSTORAGE\"\n}\n","export * from \"./BaseDataSourceInput\";\n","import AccountProxy from \"./account.proxy.sdk\";\n\nmodule.exports = AccountProxy;\n","import { BaseSDK } from \"../common/BaseSDK\";\nimport { HttpMethod } from \"../common/HttpMethod\";\nimport { RestInput } from \"../datasource/rest/RestInput\";\nimport AccountProxySDKConfig from \"./AccountSDKConfig.proxy.sdk\";\nimport { GetAssetByAccountInput } from \"./asset/GetAssetByAccountInput\";\nimport { AccountInput } from \"./common/AccountInput\";\nimport { GetAssetInput } from \"./contracts/GetAssetInput\";\nimport { GetContractInput } from \"./contracts/GetContractInput\";\nimport { GetOfferInput } from \"./offers/GetOfferInput\";\n\n/**\n * Account Proxy SDK is to interact with Vlocity Account SDK functionality hosted in node server.\n *\n * The Account Proxy SDK is a JavaScript library that act as Proxy between UI and Account SDK hosted in server.\n *\n * The Account Proxy SDK contains all Input instance creation methods & invoke API methods. It will validate input before sending to Secure DC SDK.\n *\n * SDK can be shared by different applicationsuser interfaces. SDK, like any Vlocity SDK, can be extended and overrided to customized\n * implementations.\n */\nexport default class AccountProxy extends BaseSDK {\n  /**\n   * Get a singleton instance of this AccountProxy.\n   * @param {config} AccountProxySDKConfig to initialize this SDK.\n   * @returns an instance of this SDK.\n   */\n  public static getInstance(config: AccountProxySDKConfig): AccountProxy {\n    // If there is no instance and no datasource to create the instance, throw an error.\n    if (\n      !AccountProxy.instance &&\n      (!config || !config.datasource || !config.secureServerUrl)\n    ) {\n      throw new Error(\n        \"AccountProxy:getInstance: AccountProxy cannot be instantiated properly. AccountProxySDKConfig, AccountProxySDKConfig.secureServerUrl and AccountProxySDKConfig.datasource must be provided.\"\n      );\n    }\n    if (!AccountProxy.instance || (config && config.create)) {\n      AccountProxy.instance = new AccountProxy(config);\n    }\n    return AccountProxy.instance;\n  }\n\n  private static instance: AccountProxy;\n\n  /**\n   * The config used to initialize this SDK.\n   */\n  private config: AccountProxySDKConfig;\n\n  constructor(config: AccountProxySDKConfig) {\n    super();\n    this.config = config;\n  }\n\n  /**\n   * Create a default GetContractInput object.\n   */\n  public createGetContractsInput(): GetContractInput {\n    return new GetContractInput();\n  }\n\n  /**\n   * Proxy getContracts method calls Secure DC SDK getContracts method with given input\n   * @param {GetContractInput} input\n   * @returns {Promise<any>}\n   */\n  public getContracts(input: GetContractInput): Promise<any> {\n    if (!input.secureServerEndPointUrl) {\n      input.secureServerEndPointUrl = \"/getcontracts\";\n    }\n    const restURL = this.config.secureServerUrl + input.secureServerEndPointUrl;\n    return this.invokeAPI(HttpMethod.POST, restURL, input);\n  }\n\n  /**\n   * Create a default GetAssetInput object.\n   */\n  public createGetAssetsInput(): GetAssetInput {\n    return new GetAssetInput();\n  }\n\n  /**\n   * Proxy getAssets method calls Secure DC SDK getAssets method with given input\n   * @param {GetAssetInput} input\n   * @returns {Promise<any>}\n   */\n  public getAssets(input: GetAssetInput): Promise<any> {\n    if (!input.secureServerEndPointUrl) {\n      input.secureServerEndPointUrl = \"/getassets\";\n    }\n    const restURL = this.config.secureServerUrl + input.secureServerEndPointUrl;\n    return this.invokeAPI(HttpMethod.POST, restURL, input);\n  }\n\n  /**\n   * Create a default GetAssetByAccountInput object.\n   */\n  public createGetAssetsByAccountInput(): GetAssetByAccountInput {\n    return new GetAssetByAccountInput();\n  }\n\n  /**\n   * Proxy getAssetsByAccount method calls Secure DC SDK getAssetsByAccount method with given input\n   * @param {GetAssetByAccountInput} input\n   * @returns {Promise<any>}\n   */\n  public getAssetsByAccount(input: GetAssetByAccountInput): Promise<any> {\n    if (!input.secureServerEndPointUrl) {\n      input.secureServerEndPointUrl = \"/getassetsbyaccount\";\n    }\n    const restURL = this.config.secureServerUrl + input.secureServerEndPointUrl;\n    return this.invokeAPI(HttpMethod.POST, restURL, input);\n  }\n\n  /**\n   * Create a default GetOfferInput object.\n   */\n  public createGetOffersInput(): GetOfferInput {\n    return new GetOfferInput();\n  }\n\n  /**\n   * Proxy getOffers method calls Secure DC SDK getOffers method with given input\n   * @param {GetOfferInput} input\n   * @returns {Promise<any>}\n   */\n  public getOffers(input: GetOfferInput): Promise<any> {\n    if (!input.secureServerEndPointUrl) {\n      input.secureServerEndPointUrl = \"/getaccountoffers\";\n    }\n    const restURL = this.config.secureServerUrl + input.secureServerEndPointUrl;\n    return this.invokeAPI(HttpMethod.POST, restURL, input);\n  }\n\n  /**\n   * Returns a API call response.\n   * @param {HttpMethod} httpMethod\n   * @param {string} restURL\n   * @param {AccountInput} input\n   */\n  private async invokeAPI(\n    httpMethod: HttpMethod,\n    restURL: string,\n    input?: AccountInput\n  ) {\n    let restOptions: RestInput;\n    if (httpMethod === \"POST\" || httpMethod === \"PUT\") {\n      restOptions = new RestInput({\n        options: {\n          body: JSON.stringify({ input: JSON.stringify(input) }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          method: httpMethod\n        },\n        url: restURL\n      });\n    } else {\n      restOptions = new RestInput({\n        options: {\n          method: httpMethod\n        },\n        url: restURL\n      });\n    }\n    if (this.config.secureServerRequestCredentials) {\n      restOptions.options.credentials = this.config.secureServerRequestCredentials;\n    }\n    return await this.config.datasource.rest(restOptions).execute();\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","/**\n * Function that constructs the query string\n * @param inputObject\n * @param withQuestionMarkPrefix\n * @param fieldsToInclude - Optional Collection of field names that must be included in the query string. All fields are used if this is undefined or an empty array\n * @returns {string}\n */\nexport function queryStringEncode(\n  inputObject: any,\n  withQuestionMarkPrefix: boolean = true,\n  fieldsToInclude?: string[]\n): string {\n  let queryString: string;\n  queryString = Object.entries(inputObject)\n    .filter(([key]) => {\n      return (\n        !fieldsToInclude ||\n        fieldsToInclude.length === 0 ||\n        fieldsToInclude.indexOf(key) >= 0\n      );\n    })\n    .map(([key, value]) => `${key}=${encodeURIComponent(String(value))}`)\n    .join(\"&\");\n  if (!queryString) {\n    return \"\";\n  }\n  if (withQuestionMarkPrefix) {\n    queryString = `?${queryString}`;\n  }\n\n  return queryString;\n}\n","const retryDelay: number = 500;\n\nexport default class Delay {\n  public static defaultRetryCount: number = 3;\n  public static defaultTimeout: number = 10000;\n\n  public static setDefaultRetryCount(retryCount: number) {\n    this.defaultRetryCount = retryCount;\n  }\n\n  /**\n   * addRetryDelay - Add delay before next retry\n   * @returns Promise\n   */\n\n  public static addRetryDelay() {\n    return new Promise(resolve => {\n      //constant retry Delay\n      setTimeout(resolve, retryDelay);\n    });\n  }\n\n  public static setDefaultTimeout(timeout) {\n    this.defaultTimeout = timeout;\n  }\n}\n","import { isFunction, isObject } from \"util\";\nimport { Logger } from \"../logger\";\nimport { SalesForceNamespace } from \"./SalesForceNamespace\";\n\n/**\n * Base SDK abstract class.\n * Base class from which other SDK classes are derived\n */\n\n// SDK_VERSION global variable is defined in webpack.config.js\ndeclare const SDK_VERSION: string;\n\nexport abstract class BaseSDK {\n  /**\n   * Adds all the enumerable string keyed function properties of a source\n   * object to the sdk prototype.\n   * `.extend` should only be used to add new methods and it won't override the existing methods.\n   *\n   * **Note:** If the property already exists, it will be not be added.\n   *\n   * Custom functions which are being extended should have proper namespaces to avoid issues during upgrades.\n   * When Vlocity releases new changes it won't impact if unique namespaces are used.\n   *\n   * Example: `myCompanyOrFeatureMethodName`\n   *\n   * @example **How to extend an sdk?**\n   *\n   * ```\n   * VlocitySDK.datasource.extend({ myCompanySayHello(){\n   *      console.log(\"Hello World\");\n   *   }, sayTime() {\n   *      console.log(new Date().myCompanyGetTime());\n   *   }});\n   *\n   * const dataSource = VlocitySDK.datasource.getInstance({'create':true});\n   * console.log(daSource.myCompanySayHello())\n   * ```\n   *\n   * @param extendObj The object of functions\n   */\n  public static extend(extendObj: object) {\n    if (!isObject(extendObj)) {\n      throw new Error(\n        \"Extend method expects an object with functions as properties\"\n      );\n    }\n    const properties = Object.keys(extendObj);\n\n    const methodNames = properties.filter(methodName =>\n      // isFunction supports async and generator functions as well\n      isFunction(extendObj[methodName])\n    );\n\n    methodNames.forEach(methodName => {\n      if (!this.prototype.hasOwnProperty(methodName)) {\n        this.prototype[methodName] = extendObj[methodName];\n      } else {\n        Logger.log(\n          `SDK extend method failed to extend ${methodName} as it already exists`\n        );\n      }\n    });\n  }\n\n  /**\n   * Adds all the enumerable string keyed function properties of a source\n   * object to the sdk prototype.\n   *\n   * `.override` method should only be used to override the existing methods and should only be used in rare cases.\n   * Overriding the existing or default methods may cause unintended consequences and may also impact during upgrades.\n   *\n   * **Please be cautious while using this**\n   *\n   * @example **How to override methods in an sdk?**\n   *\n   * ```\n   * VlocitySDK.datasource.override({ soql(){\n   *      console.log(\"This code overrides the default soql function\");\n   *      // code goes here...\n   *   }, sosl() {\n   *      console.log(\"This code overrides the default soql function\");\n   *      // code goes here...\n   *   }});\n   *\n   * const dataSource = VlocitySDK.datasource.getInstance({'create':true});\n   * console.log(dataSource.soql()); // prints \"This code overrides the default soql function\"\n   * ```\n   * @param overrideObj The object of functions\n   */\n  public static override(overrideObj: object) {\n    if (!isObject(overrideObj)) {\n      throw new Error(\"Override method expects an object with properties\");\n    }\n    // @TODO: Not restricting to just functions/methods. All properties can be overridden.\n    // Needs to be revisited to finalize the restrictions\n    Object.assign(this.prototype, overrideObj);\n  }\n\n  // SDK_VERSION will be replaced with package.json version during build\n  private sdkVersion: string = SDK_VERSION;\n\n  /**\n   * Returns the version number of SDK.\n   * @return {string} Returns SDK version number as string\n   */\n  public version(): string {\n    return this.sdkVersion;\n  }\n\n  /** getter method for namespace. Provides the salesforce org namespace */\n  get namespace(): string {\n    return SalesForceNamespace.namespace;\n  }\n\n  /** setter method for namespace. Set custom namespace\n   * @param {string} Salesforce Namespace.\n   */\n  set namespace(customNamespace: string) {\n    SalesForceNamespace.namespace = customNamespace;\n  }\n}\n","export enum HttpMethod {\n  GET = \"GET\",\n  HEAD = \"HEAD\",\n  POST = \"POST\",\n  PUT = \"PUT\",\n  DELETE = \"DELETE\",\n  CONNECT = \"CONNECT\",\n  OPTIONS = \"OPTIONS\",\n  TRACE = \"TRACE\",\n  PATCH = \"PATCH\"\n}\n","import { BaseDataSourceInput } from \"../common\";\n\nexport class RestInput extends BaseDataSourceInput {\n  public url;\n  public options: RequestInit;\n  constructor(restInput) {\n    super(\n      restInput.cacheable,\n      restInput.cacheExpiration,\n      restInput.retryCount,\n      restInput.timeoutInMillis,\n      restInput.reload,\n      restInput.cacheType\n    );\n    this.url = restInput.url;\n    this.options = restInput.options;\n  }\n  public digest(): Promise<string> {\n    return super.digestData(this.url, JSON.stringify(this.options));\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export enum LogLevel {\n  debug,\n  log,\n  info,\n  warn,\n  error,\n  none\n}\n\n/**\n * Logger supports 5 log levels and also can suppress logs altogether.\n *\n * The order is a follows:\n * debug < log < info < warn < error\n *\n * Log types above the current log level will be captured.\n * If you set the log level to `info`, `warn` and `errors` will still be logged, but `debug` and\n * `log` logs will not be logged.\n * Use log level 'none' to suppress all logs\n */\nexport class Logger {\n  public static debug(...args: any[]): void {\n    Logger.emitLogMessage(\"debug\", args);\n  }\n\n  public static info(...args: any[]): void {\n    Logger.emitLogMessage(\"info\", args);\n  }\n\n  public static log(...args: any[]): void {\n    Logger.emitLogMessage(\"log\", args);\n  }\n\n  public static warn(...args: any[]): void {\n    Logger.emitLogMessage(\"warn\", args);\n  }\n\n  public static error(...args: any[]): void {\n    Logger.emitLogMessage(\"error\", args);\n  }\n\n  public static getLogLevel(): LogLevel {\n    return this.debugLevel;\n  }\n\n  public static setLogLevel(value: LogLevel) {\n    if (!(value in LogLevel)) {\n      throw new Error(\"Invalid value `value` assigned to `logLevel`\");\n    }\n    this.debugLevel = value;\n  }\n  // Default log level is info\n  private static debugLevel: LogLevel = LogLevel.info;\n\n  private static emitLogMessage(\n    type: \"debug\" | \"info\" | \"log\" | \"warn\" | \"error\",\n    args: any[]\n  ) {\n    if (LogLevel[type] < Logger.debugLevel) {\n      return;\n    }\n    console[type](...args);\n  }\n}\n","/**\n * Base SDK Configuration.\n * This is used to specify the config on how to initialize the SDK.\n */\nexport class SDKConfig {\n  /**\n   * Create boolean flag to indicate a new SDK instance should be created or not.\n   */\n  public create: boolean;\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","import { CacheType } from \"../../common/cacheType\";\nimport Delay from \"../utils/delay\";\n\nexport abstract class BaseDataSourceInput {\n  private static DEFAULT_CACHE_EXPIRATION: Date = new Date(\n    new Date().getTime() + 5 * 60000\n  );\n  /**\n   * Flag to indicate if this datasource call should be cached.\n   */\n  public cacheable?: boolean;\n\n  /**\n   * Expiration Date time of the cached item.\n   * Default is current time plus 5 minutes.\n   */\n  public cacheExpiration?: Date;\n\n  /**\n   * retryCount defines the number of retry for datasource.execute() to be called\n   * if a failure is encountered.\n   */\n  public retryCount?: number;\n  /**\n   * timeoutInMillis defines the timeout for API requests.\n   */\n  public timeoutInMillis?: number;\n  /**\n   * reload defines if the data should be retrive from the cache or not.\n   * Default is false.\n   * set reload to true when fresh data needs to fetched from the API\n   */\n  public reload?: boolean;\n  /**\n   * cacheType defines where the response data should be stored.\n   * Default is IndexedBB.\n   * set cacheType storageType.INDEXEDDB/storageType.LOCALSTORAGE/storageType.SESSIONSTORAGE\n   */\n  public cacheType?: CacheType;\n  constructor(\n    cacheable: boolean = false,\n    cacheExpiration: Date = BaseDataSourceInput.DEFAULT_CACHE_EXPIRATION,\n    retryCount: number = Delay.defaultRetryCount,\n    timeoutInMillis: number = Delay.defaultTimeout,\n    reload: boolean = false,\n    cacheType: CacheType = CacheType.INDEXEDDB\n  ) {\n    this.cacheable = cacheable;\n    this.cacheExpiration = cacheExpiration;\n    this.retryCount = retryCount;\n    this.timeoutInMillis = timeoutInMillis;\n    this.reload = reload;\n    this.cacheType = cacheType;\n  }\n  public abstract digest(): Promise<string>;\n\n  /**\n   * This function generates a unique digest value for this input.\n   * Subclass needs to provide the unique data to be digested to ensure the uniqueness.\n   * @param data unique data to be digested.\n   * @returns Promise filled with hex string representation of the digested value. This hex string can be used for comparison and display.\n   */\n  protected async digestData(...data: string[]): Promise<string> {\n    const encoder = new TextEncoder();\n    const dataToDigest = encoder.encode(data.join(\",\"));\n    return crypto.subtle.digest(\"SHA-256\", dataToDigest).then(digestValue => {\n      return this.hexString(digestValue);\n    });\n  }\n\n  /**\n   * This will convert a non empty ArrayBuffer to hex string.\n   * @param buffer ArrayBuffer to convert to hex string representation.\n   * @returns hexString string representation of buffer.\n   */\n  private hexString(buffer) {\n    const byteArray = new Uint8Array(buffer);\n\n    const hexCodes = [...byteArray].map(value => {\n      const hexCode = value.toString(16);\n      const paddedHexCode = hexCode.padStart(2, \"0\");\n      return paddedHexCode;\n    });\n\n    return hexCodes.join(\"\");\n  }\n}\n","export * from \"./url.util\";\nexport * from \"./objectmap.util\";\nexport * from \"./common.util\";\n","declare const SF_NAMESPACE: string;\n\n/**\n * This class returns the current package namespace, prefix for sobjects, fields and SF REST API prefix as follows:\n * 1. vlocity_cmt with namespace() (for use in vlocity_cmt.CpqAppHandler)\n * 2. vlocity_cmt__ with prefix() (for use in custom sobject or fields e.g. vlocity_cmt__OrderProvisioningStatus__c)\n * 3. /vlocity_cmt with restAPIPrefix() (for use in sf rest API - /vlocity_cmt/v1/proudcts)\n */\nexport class SalesForceNamespace {\n  // Build script populates(replaces) the SF_NAMESPACE based on env properties\n  private static internalPrefix: string = `${SF_NAMESPACE}__`;\n  private static internalNamespace: string = SF_NAMESPACE;\n  private static internalRestAPIPrefix: string = `/${SF_NAMESPACE}`;\n\n  /**\n   * This function returns the namespace that is being used in SDK.\n   * @returns namespace.\n   */\n  public static get namespace(): string {\n    return SalesForceNamespace.internalNamespace;\n  }\n\n  /**\n   * This function provides a way to override the default or build time set up of namespace.\n   * @param namespace set to be used in SDKs.\n   */\n  public static set namespace(customNamespace: string) {\n    SalesForceNamespace.internalNamespace = customNamespace;\n    if (!customNamespace) {\n      SalesForceNamespace.internalPrefix = customNamespace;\n      SalesForceNamespace.internalRestAPIPrefix = customNamespace;\n    } else {\n      SalesForceNamespace.internalPrefix = `${customNamespace}__`;\n      SalesForceNamespace.internalRestAPIPrefix = `/${customNamespace}`;\n    }\n  }\n\n  /**\n   * This returns the namespace prefix for sobject and fields.\n   * If namespace is defined and not an empty string, this will return {namespace}__. e.g. vlocity_cmt__\n   * If namespace is empty, this will return an empty string.\n   *\n   * @example\n   * ```typescript\n   * `${SalesForceNamespace.prefix}OrderLineItemProvisioningStatus__c`\n   * ```\n   */\n  public static get prefix(): string {\n    return SalesForceNamespace.internalPrefix;\n  }\n\n  /**\n   * This returns the SalesForce Rest URL prefix with the preceding /.\n   * If namespace is defined and not an empty string, this will return /{namespace}. e.g. /vlocity_cmt\n   * If namespace is empty, this will return an empty string.\n   *\n   * @example\n   * ```typescript\n   * `/services/apexrest${SalesForceNamespace.restAPIPrefix}/v2/carts/items`\n   * ```\n   */\n  public static get restAPIPrefix(): string {\n    return SalesForceNamespace.internalRestAPIPrefix;\n  }\n}\n","/**\n * Function that constructs the object mapping for given keys\n * @param mappingObject - array of objects\n * @param keysToInclude - array of strings. For multilevel keys use (.) operator. eg: ['name','id.value']\n * @param excludeKeysInResponse - Optional value from user to exclude keys in response.\n * @returns {array}\n */\n\nexport function objectMap(\n  mappingObject: any,\n  keysToInclude: string[],\n  excludeKeysInResponse?: boolean\n): any {\n  const result = [];\n  try {\n    mappingObject.forEach(obj => {\n      const mappedObj = {};\n      keysToInclude.forEach(key => {\n        if (key) {\n          const keyObj = retriveCustomKey(key);\n          key = keyObj.key;\n          const splittedKeys = key.split(\".\");\n          if (splittedKeys.length > 1) {\n            mappedObj[\n              keyObj.customKey || splittedKeys[splittedKeys.length - 1]\n            ] = splittedKeys.reduce((curObj, curKey) => {\n              return curObj[curKey];\n            }, obj);\n          } else {\n            mappedObj[keyObj.customKey || key] = obj[key];\n          }\n        }\n      });\n      if (excludeKeysInResponse) {\n        result.push(Object.values(mappedObj).toString());\n      } else {\n        result.push(mappedObj);\n      }\n    });\n  } catch (e) {\n    return [];\n  }\n  return JSON.parse(JSON.stringify(result));\n}\n\nfunction retriveCustomKey(key: string): any {\n  const splittedKeys = key.split(\"#\");\n  const keyNameObject = { customKey: null, key: splittedKeys[0] };\n  if (splittedKeys.length > 1) {\n    keyNameObject.customKey = splittedKeys[1];\n  }\n  return keyNameObject;\n}\n","import { Logger } from \"../logger\";\n\n/**\n * Function that find product group for given hierarchial path.\n * @param hierarchyPath - list of id's\n * @param productGroups - list of product groups\n * @returns {any}\n */\n\nexport function findProductGroup(hierarchyPath: any, productGroups: any): any {\n  try {\n    for (const productGroup of productGroups) {\n      if (productGroup.Id === hierarchyPath[0]) {\n        if (productGroup.childProducts) {\n          return productGroup;\n        } else if (productGroup.productGroups) {\n          return findProductGroup(\n            hierarchyPath.slice(1),\n            productGroup.productGroups\n          );\n        }\n      }\n    }\n  } catch (e) {\n    Logger.info(\"@@@ here in catch\", e);\n    return null;\n  }\n}\n\n/**\n * Function which sorts given array\n * @param list - Array which needed to be sorted. It can be Array of string or numbers or objects.\n * @param sortKey - Optional. Pass a sort by key.\n * @param orderByDesc - Optional. This is to specify order. Pass true for descending.\n */\nexport function sortItems(\n  list: any[],\n  sortKey?: string,\n  orderByDesc?: boolean\n): any[] {\n  try {\n    let sortedList = [];\n    if (sortKey) {\n      sortedList = list.sort((a, b) =>\n        a[sortKey].toString().localeCompare(b[sortKey].toString())\n      );\n    } else {\n      sortedList = list.sort();\n    }\n    return orderByDesc ? sortedList.reverse() : sortedList;\n  } catch (e) {\n    return list;\n  }\n}\n"],"sourceRoot":""}